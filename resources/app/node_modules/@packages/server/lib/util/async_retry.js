"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.linearDelay = exports.asyncRetry = void 0;
function asyncRetry(fn, options) {
    return async (...args) => {
        var _a;
        let attempt = 0;
        let errors = [];
        const shouldRetry = (_a = options.shouldRetry) !== null && _a !== void 0 ? _a : (() => true);
        do {
            try {
                return await fn(...args);
            }
            catch (e) {
                attempt++;
                errors.push(e);
                if (!shouldRetry(e)) {
                    if (errors.length === 1) {
                        throw e;
                    }
                    throw new AggregateError(errors);
                }
                const delay = options.retryDelay ? options.retryDelay(attempt) : undefined;
                if (delay !== undefined) {
                    await new Promise((resolve) => {
                        return setTimeout(resolve, delay);
                    });
                }
            }
        } while (attempt < options.maxAttempts);
        if (errors.length === 1) {
            throw errors[0];
        }
        throw new AggregateError(errors);
    };
}
exports.asyncRetry = asyncRetry;
const linearDelay = (inc) => {
    return (attempt) => {
        return attempt * inc;
    };
};
exports.linearDelay = linearDelay;
