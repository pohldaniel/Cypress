"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printProtocolUploadError = void 0;
const tslib_1 = require("tslib");
const http_error_1 = require("../network/http_error");
const system_error_1 = require("../network/system_error");
const stream_stalled_error_1 = require("../upload/stream_stalled_error");
const debug_1 = tslib_1.__importDefault(require("debug"));
const errors = tslib_1.__importStar(require("../../errors"));
const debug = (0, debug_1.default)('cypress:server:cloud:artifacts');
const printProtocolUploadError = (error) => {
    debug('protocol error: %O', error);
    // eslint-disable-next-line no-console
    console.log('');
    if (error.errors) {
        errors.warning('CLOUD_PROTOCOL_UPLOAD_AGGREGATE_ERROR', error);
    }
    else if (http_error_1.HttpError.isHttpError(error)) {
        errors.warning('CLOUD_PROTOCOL_UPLOAD_HTTP_FAILURE', error);
    }
    else if (system_error_1.SystemError.isSystemError(error)) {
        errors.warning('CLOUD_PROTOCOL_UPLOAD_NETWORK_FAILURE', error);
    }
    else if (stream_stalled_error_1.StreamStalledError.isStreamStalledError(error)) {
        errors.warning('CLOUD_PROTOCOL_UPLOAD_STREAM_STALL_FAILURE', error);
    }
    else {
        errors.warning('CLOUD_PROTOCOL_UPLOAD_UNKNOWN_ERROR', error);
    }
};
exports.printProtocolUploadError = printProtocolUploadError;
